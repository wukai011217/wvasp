#!/bin/bash
#run vasp
#useage:./run -dir <TO_DIR> -match <match> -screen <screen>
#EX:./run -dir /home/wk/auto/test/ads -match M -screen OUTCAR
source /home/wk/auto/function/environment
source /home/wk/auto/function/setting

#default
TO_DIR="$(pwd)"
match=""
screen="OUTCAR"
command="0"
i=0

#logging
logging 1 "run"

#input
while [[ $# -gt 1 ]] ;do 
    case "$1" in 
        -dir|-D|-d)
            if [[ "$2" == *"$WORK_DIR"* ]];then
              TO_DIR="$2"
            else 
              TO_DIR="$(pwd)/$2"
            fi
            echo "TO_DIR: $TO_DIR" >> "$WORK_DIR/logs"
            shift 2 ;;
        -match|-M|-m)
            match="$2"
            echo "match: $match" >> "$WORK_DIR/logs"
            shift 2 ;;
        -screen|-S|-s)
            screen="$2"
            echo "screen: $screen" >> "$WORK_DIR/logs"
            shift 2 ;;
        --) shift 
            break;; 
        *) echo "$1 is not an option " ;; 
    esac    
done

#mian
case "$command" in
    0)
        find "$TO_DIR" -type d | while read TARGET_DIR
        do
            if [ -z "$(find "$TARGET_DIR" -mindepth 1 -type d)" ]; then
                if [[ "$TARGET_DIR" == *"$match"* ]];then
                    if [ -f "$TARGET_DIR"/POSCAR ] && [ -f "$TARGET_DIR"/INCAR ] && [ -f "$TARGET_DIR"/KPOINTS ] && [ -f "$TARGET_DIR"/POTCAR ];then
                        if compgen -G "$TARGET_DIR/*$screen*" > /dev/null; then
                            echo 'pass'
                        else
                            cd "$TARGET_DIR"
                            echo "$TARGET_DIR" 2>> "$WORK_DIR/errors" 1>> "$WORK_DIR/logs"
                            
                            #sbatch vasp.sbatch >> "$WORK_DIR/job"
                            ((i++))
                            if ((i > 100));then
                                echo "OK"
                                break
                            else
                                echo "$i $TARGET_DIR" >> "$WORK_DIR/job"
                            fi
                        fi
                    fi
                fi
            fi
        done
        ;;
    help)
        echo 'this is help'
        ;;
    *)
        echo "$command is not an option"
        ;;
esac

#result
result $? "run"

