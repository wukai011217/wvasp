#!/bin/bash
#若有check-res输出文件，则根据文件内容进行数据提取。否则提取全部数据
source environment
source setting

#default
ROOT_DIR=$(pwd)
file="CONTCAR"
command="0"
TO_DIR=$(pwd)
match=""
#不接受外来参数改变
check_file="$WORK_DIR/datas"

#logging
logging 1 "copy-file"

#input
while [[ $# -gt 1 ]] ;do 
    case "$1" in 
        -dir|-D|-d) ROOT_DIR=$2 
            echo "ROOT_DIR: $ROOT_DIR" >> "$WORK_DIR/logs"
            shift 2 ;; 
        -file|-F|-f) file=$2
            echo "file: $file" >> "$WORK_DIR/logs"
            shift 2 ;;  
        -to) TO_DIR=$2
            echo "TO_DIR: $TO_DIR" >> "$WORK_DIR/logs"
            shift 2 ;;  
        -command|-c|-C) command=$2
            echo "command: $command" >> "$WORK_DIR/logs"
            shift 2 ;;
        -match|-m|-M) match=$2
            echo "match: $match" >> "$WORK_DIR/logs"
            shift 2 ;;
        --) shift 
            break;; 
        *) echo "$1 is not an option" ;; 
    esac 
   
done


#main
cd $WORK_DIR
case "$command" in
    0)find "$ROOT_DIR" -type d | while read TARGET_DIR
        do  
            if [ -z "$(find "$TARGET_DIR" -mindepth 1 -type d)" ]; then
                if [[ "$TARGET_DIR" == *"$match"* ]]; then
                    item=$(awk -F/ '{print $(NF-2)"/"$(NF-1)"/"$NF}' <<< $TARGET_DIR )
                    echo $item
                    mkdir -p "$TO_DIR/$item"    
                    rsync -av --include="$file" --exclude="*" "$TARGET_DIR/" "$TO_DIR/$item" 2>>"$WORK_DIR/errors"
                fi 
           fi
        done ;;
    1)
        :
        ;;
    help)
        echo 'this is help'
        ;;
    *) echo "$command is not an option" ;; 
esac

#result
result $? "copy-file"